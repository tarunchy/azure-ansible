---
- name: Ensure Azure Resource Group exists
  hosts: localhost
  gather_facts: no
  vars:
    user_action: "{{ user_action }}"
  tasks:
    - name: Gather OS family fact
      setup:
        filter: ansible_os_family
      when: user_action == 'Create'

    - name: Debug user_action variable
      debug:
        msg: "The user_action variable is set to: {{ user_action }}"

    - name: Ensure required packages are installed
      become: yes
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes
      when: ansible_os_family == "RedHat" and user_action == 'Create'

    - name: Create directory for Microsoft keys
      become: yes
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
      when: ansible_os_family == "RedHat" and user_action == 'Create'

    - name: Download and install Microsoft signing key
      become: yes
      shell: |
        curl -sLS https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | tee /etc/apt/keyrings/microsoft.gpg > /dev/null
        chmod go+r /etc/apt/keyrings/microsoft.gpg
      when: ansible_os_family == "RedHat" and user_action == 'Create'

    - name: Add Azure CLI repository
      become: yes
      shell: |
        AZ_DIST=$(lsb_release -cs)
        echo "Types: deb" > /etc/apt/sources.list.d/azure-cli.sources
        echo "URIs: https://packages.microsoft.com/repos/azure-cli/" >> /etc/apt/sources.list.d/azure-cli.sources
        echo "Suites: ${AZ_DIST}" >> /etc/apt/sources.list.d/azure-cli.sources
        echo "Components: main" >> /etc/apt/sources.list.d/azure-cli.sources
        echo "Architectures: $(dpkg --print-architecture)" >> /etc/apt/sources.list.d/azure-cli.sources
        echo "Signed-By: /etc/apt/keyrings/microsoft.gpg" >> /etc/apt/sources.list.d/azure-cli.sources
      when: ansible_os_family == "RedHat" and user_action == 'Create'

    - name: Update apt cache and install Azure CLI
      become: yes
      apt:
        name: azure-cli
        state: present
        update_cache: yes
      when: ansible_os_family == "RedHat" and user_action == 'Create'

    - name: Ensure resource group is present
      azure_rm_resourcegroup:
        name: myResourceGroup
        location: westus2
        state: present
      when: user_action == 'Create'
